--
-- Target: Microsoft SQL Server 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : May 16 2016 14:40
-- Script Generated by Database Design Studio 2.21.3 
--

--
-- Select Database: 'db_name'
--
 
IF DB_NAME() = 'Grundfos.Database'
    RAISERROR('''Grundfos.Database'' DATABASE CONTEXT NOW IN USE.',1,1)
ELSE
    RAISERROR('ERROR IN BATCH FILE, ''USE db_name'' FAILED!  KILLING THE SPID NOW.',22,127) WITH LOG
 
GO
EXECUTE SP_DBOPTION 'Grundfos.Database' ,'TRUNC. LOG ON CHKPT.' ,'TRUE'
GO

--
-- Create Table    : 'apartmentCharacteristic'   
-- apartmentId     :  
-- floor           :  
-- roomNumber      :  
-- roomSize        :  
--
CREATE TABLE apartmentCharacteristic (
    apartmentId    BIGINT IDENTITY(1,1) NOT NULL,
    floor          BIGINT NOT NULL,
    roomNumber     BIGINT NOT NULL,
    roomSize       REAL NOT NULL,
CONSTRAINT pk_apartmentCharacteristic PRIMARY KEY CLUSTERED (apartmentId))
GO

--
-- Create Table    : 'sensorCharacteristic'   
-- sensorId        :  
-- description     :  
-- unit            :  
-- calibrationDate :  
-- calibrationEquation :  
-- calibrationCoefficient :  
-- externalRef     :  
--
CREATE TABLE sensorCharacteristic (
    sensorId       BIGINT IDENTITY(1,1) NOT NULL,
    description    NVARCHAR(500) NOT NULL,
    unit           NVARCHAR(500) NOT NULL,
    calibrationDate DATETIME NOT NULL,
    calibrationEquation NVARCHAR(500) NOT NULL,
    calibrationCoefficient NVARCHAR(500) NOT NULL,
    externalRef    NVARCHAR(500) NOT NULL,
CONSTRAINT pk_sensorCharacteristic PRIMARY KEY CLUSTERED (sensorId))
GO

--
-- Create Table    : 'reading'   
-- readingValue    :  
-- readingTimestamp :  
-- readingId       :  
-- apartmentId     :  (references apartmentCharacteristic.apartmentId)
-- sensorId        :  (references sensorCharacteristic.sensorId)
--
CREATE TABLE reading (
    readingValue   BIGINT NOT NULL,
    readingTimestamp DATETIME NOT NULL,
    readingId      BIGINT IDENTITY(1,1) NOT NULL,
    apartmentId    BIGINT NOT NULL,
    sensorId       BIGINT NOT NULL,
CONSTRAINT pk_reading PRIMARY KEY CLUSTERED (readingId),
CONSTRAINT fk_reading FOREIGN KEY (apartmentId)
    REFERENCES apartmentCharacteristic (apartmentId)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_reading2 FOREIGN KEY (sensorId)
    REFERENCES sensorCharacteristic (sensorId)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

/* Log table for trigger */
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Log]'))
	CREATE TABLE Log
	(
	logId BIGINT IDENTITY(1,1) NOT NULL,
	oldValue VARCHAR(1000),
	newValue  VARCHAR(1000)
	)
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON apartmentCharacteristic TO public
GO
GRANT ALL ON sensorCharacteristic TO public
GO
GRANT ALL ON reading TO public
GO